The algorith to calsulate PHI for PhiModule.py
---------------------------------------------------
''' EXPLANATION from swathi_stage2_report
   1. This module is trained for PHI on the 1500 training data
      Fetch the pairs from 1A.english.training.data.txt and 1A.english.training.gold.txt
   2. Load the word embedding (UMBCNewNormNoStopHearst_CBOW_20_10 or UMBCNewNormNoStopHearst_SG_20_10 from Step 2) and fetch the vector represent ations of the (hyponym, hypernym) pairs. (X, Y)
   3. Calculate phi for all the pairs â€“ phi = vector(Y)/Vector(X).
   '''
   # equation 1 From Swathi_stage2_report
   '''
   4. Use these phi values in the above equation 1 : for each phi compute right size of equation 1 and store in a list.
   5. Find the phi value for which the above computed value (in 4) is minimum. This would be the PHI* (or simply PHI).
   6. Use this PHI value in the most_similar function of word2Vec[4] to determine the possible hypernyms with the input hyponym term (either raining data or trial data or test data). This is determined by the following two function calls:
      X = input term (hyponym)
           (stored in phi01.txt)<hypernym list 1> = most_similar(positive=[X, PHI*X], negative=[], 10)
	        (stored in phi02.txt)<hypernym list 2> = most_similar(positive=[X], negative=[PHI*X], 10)
   7. Then <hypernym list 1> and <hypernym list 2> are merged together : hypernyms appearing in both the lists are given higher ranking and are listed first.
		WHY COMPUTE TWO FILES: TO COVER BOTH THE DIRECTIONS
		***************************************************
                                     PHI *Input_Word                   PHI * Input_Word
		<Hypernym_List><------------------------ Input_Word ----------------------><Hypernym_List>
      < ------------------------------------------------Vector Space--------------------------------------------------->
								  
								  
